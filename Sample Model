pip install transformers

from transformers import T5ForConditionalGeneration, T5Tokenizer

# Load the T5-small model and tokenizer
model_name = "t5-small"
model = T5ForConditionalGeneration.from_pretrained(model_name)
tokenizer = T5Tokenizer.from_pretrained(model_name)

def summarize_text(text, max_length=150, min_length=40):
    # Preprocess the text for the model
    preprocess_text = text.strip().replace("\n", " ")
    t5_input_text = f"summarize: {preprocess_text}"
    
    # Tokenize the input text
    tokenized_text = tokenizer.encode(t5_input_text, return_tensors="pt", max_length=512, truncation=True)
    
    # Generate the summary
    summary_ids = model.generate(tokenized_text, max_length=max_length, min_length=min_length, length_penalty=2.0, num_beams=4, early_stopping=True)
    
    # Decode the generated summary
    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
    
    return summary

# Example text to summarize
text = """
The quick brown fox jumps over the lazy dog. This sentence is often used as a typing practice exercise because it contains every letter of the alphabet. It is a pangram, a phrase that includes all the letters of the alphabet at least once. Typing it repeatedly helps improve typing speed and accuracy.
"""

# Summarize the text
summary = summarize_text(text)
print("Original Text:\n", text)
print("\nSummary:\n", summary)
